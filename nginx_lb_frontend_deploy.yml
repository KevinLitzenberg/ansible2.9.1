# Creates standard load balancer with stock opensource load balncing algorithms
# Uses vars backend{1&2}_ip.  Set these values in vars/main.yml
# Employes http/1.1 on the backends
---
- hosts: "{{ target_host }}"
  remote_user: "{{ target_user }}"
  become: true
  roles:
    - role: nginxinc.nginx
  vars:
    nginx_type: opensource
    nginx_install_from: nginx_repository
    nginx_main_template_enable: true
    nginx_main_template:
      template_file: nginx.conf.j2
      conf_file_name: nginx.conf
      conf_file_location: /etc/nginx/
      user: nginx
      worker_processes: auto
      worker_rlimit_nofile: 21504
      error_level: warn
      worker_connections: 21504
      http_enable: true
      http_settings:
        keepalive_timeout: 65
        cache: true
        rate_limit: false
        keyval: false
      stream_enable: false
      http_global_autoindex: false

    nginx_http_template_enable: true
    nginx_http_template:
      default:
        port: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}:{{ lb_installation_port }}"
        server_name: frontend_server
        template_file: http/default.conf.j2
        conf_file_name: upstreams.conf
        conf_file_location: /etc/nginx/conf.d

        reverse_proxy:
          locations:
            backend:
              location: /
              include_files: []
              proxy_hide_headers: [] # A list of headers which shouldn't be passed to the application
              add_headers:
                strict_transport_security:
                  name: Strict-Transport-Security
                  value: max-age=15768000; includeSubDomains
                  always: true
                #header_name:
                  #name: Header-X
                  #value: Value-X
                  #always: false
              proxy_connect_timeout: null
              proxy_pass: http://backend_servers
              #rewrites:
              # - /foo(.*) /$1 break
              #proxy_pass_request_body: off
              #allows:
              # - 192.168.1.0/24
              #denies:
              # - all
              proxy_set_header:
                header_host:
                  name: Host
                  value: $host
                header_x_real_ip:
                  name: X-Real-IP
                  value: $remote_addr
                header_x_forwarded_for:
                  name: X-Forwarded-For
                  value: $proxy_add_x_forwarded_for
                header_x_forwarded_proto:
                  name: X-Forwarded-Proto
                  value: $scheme
                header_upgrade:
                  name: Upgrade
                  value: $http_upgrade
                header_connection:
                  name: Connection
                  value: "Upgrade"
                #header_random:
                  #name: RandomName
                  #value: RandomValue
              #internal: false
              #proxy_store: off
              #proxy_store_acccess: user:rw
              proxy_read_timeout: null
              proxy_send_timeout: null
              proxy_ssl:
                cert: /etc/ssl/certs/proxy_default.crt
                key: /etc/ssl/private/proxy_default.key
                trusted_cert: /etc/ssl/certs/proxy_ca.crt
                protocols: TLSv1 TLSv1.1 TLSv1.2
                ciphers: HIGH:!aNULL:!MD5
                verify: false
                verify_depth: 1
                session_reuse: true
              proxy_cache: backend_proxy_cache
              proxy_cache_valid:
                - code: 200
                  time: 10m
                - code: 301
                  time: 1m
              proxy_temp_path:
                path: /var/cache/nginx/backend/temp
              proxy_cache_lock: false
              proxy_cache_min_uses: 3
              proxy_cache_revalidate: false
              proxy_cache_use_stale:
                - http_403
                - http_404
              proxy_ignore_headers:
                - Vary
                - Cache-Control
              proxy_cookie_path:
                path: /web/
                replacement: /
              proxy_buffering: false
              proxy_http_version: 1.1
              websocket: false
              auth_basic: null
              auth_basic_user_file: null
              #try_files: $uri $uri/index.html $uri.html =404
              #auth_request: /auth
              #auth_request_set:
                #name: $auth_user
                #value: $upstream_http_x_user
              #returns:
                #return302:
                  #code: 302
                  #url: https://sso.somehost.local/?url=https://$http_host$request_uri
              #custom_options: []
          health_check_plus: false
        returns:
          return301:
            location: /
            code: 301
            value: http://$host$request_uri

        proxy_cache:
          proxy_cache_path:
            - path: /var/cache/nginx/backend
              keys_zone:
                name: backend_proxy_cache
                size: 10m
              levels: "1:2"
              max_size: 10g
              inactive: 60m
              use_temp_path: true
          proxy_temp_path:
            path: /var/cache/nginx/temp
          proxy_cache_valid:
            - code: 200
              time: 10m
            - code: 301
              time: 1m
          proxy_cache_lock: true
          proxy_cache_min_uses: 5
          proxy_cache_revalidate: true
          proxy_cache_use_stale:
            - error
            - timeout
          proxy_ignore_headers:
            - Expires
 
        upstreams:
          upstream1:
            name: backend_servers
            lb_method: hash $request_uri consistent
            zone_name: backend_cache
            zone_size: 64k
            sticky_cookie: false
            servers:
              backend_server_1:
                address: "{{ backend1_ip }}"
                health_check: max_fails=3 fail_timeout=5s
                port: 80
                weight: 1
              backend_server_2:
                address: "{{ backend2_ip }}"
                port: 80
                weight: 1
                health_check: max_fails=3 fail_timeout=5s

    nginx_cleanup_config: true
