---
# kitchen configuration for CI testing
driver:
  name: docker

# Special config for enabling systemd init
default_driver_config: &default_driver_config
  run_command: /sbin/init
  cap_add:
    - SYS_ADMIN
  run_options:
    env: container=docker
  volume:
    - /sys/fs/cgroup:/sys/fs/cgroup
  provision_command:
    - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
    - systemctl enable sshd.service

transport:
  # TODO: remove with better solution than workaround:
  # https://github.com/test-kitchen/test-kitchen/issues/1035
  max_ssh_sessions: 6

provisioner:
  hosts: test-kitchen
  name: ansible_playbook
  require_chef_for_busser: false
  require_ruby_for_busser: false
  ansible_verbosity: 2
  ansible_verbose: true

verifier:
  name: inspec

platforms:
  - name: centos-7
    driver_config:
      <<: *default_driver_config
  - name: fedora-28
    driver_config:
      <<: *default_driver_config
  - name: fedora-30
    driver_config:
      <<: *default_driver_config
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable sshd.service
        - yum -y install python-pip
    provisioner:
      require_pip: true
      ansible_cfg_path: test/ansible.cfg
  - name: fedora-31
    driver_config:
      <<: *default_driver_config
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable sshd.service
        - yum -y install python-pip
    provisioner:
      require_pip: true
      ansible_cfg_path: test/ansible.cfg
  - name: ubuntu-16.04
    driver_config:
      <<: *default_driver_config
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-18.04
    driver_config:
      <<: *default_driver_config
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: ubuntu-19.04
    driver_config:
      <<: *default_driver_config
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-8
    driver_config:
      <<: *default_driver_config
      run_command: /lib/systemd/systemd
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service
  - name: debian-9
    driver_config:
      <<: *default_driver_config
      run_command: /lib/systemd/systemd
      provision_command:
        - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
        - systemctl enable ssh.service

suites:
  - name: unit_config
    provisioner:
      playbook: test/integration/unit_config/default_playbook.yml
    verifier:
      inspec_tests:
        - path: test/integration/unit_config
